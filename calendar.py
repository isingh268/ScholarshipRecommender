# -*- coding: utf-8 -*-
"""Calendar

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VlGGRnsVYbNbdMLltot-v_T_SInijzjW
"""
pip install streamlit-calendar

import streamlit as st
import pandas as pd
from datetime import datetime
from streamlit_calendar import Calendar

# Sample scholarship data for testing
data = {
    "Scholarship Name": [
        "Kuru Footsteps to Your Future Scholarship",
        "Alert1 Students for Seniors Scholarship",
        "Blankstyle Scholarship Opportunity #1",
        "Innovation In Education Scholarship",
        "The Bert & Phyllis Lamb Prize in Political Science",
        "New Beginnings Immigrant Scholarship",
    ],
    "Date Due": [
        "2024-12-20",
        "2025-01-10",
        "2024-12-31",
        "2024-10-15",
        "2025-02-14",
        "2024-10-18",
    ],
    "Summary": [
        "Amount: $1,000. Deadline: December 20, 2024.",
        "Amount: $500. Deadline: January 10, 2025.",
        "Amount: $1,000. Deadline: December 31, 2024.",
        "Amount: $500 each month. Deadline: 15th of each month.",
        "This prize is awarded for excellence in Political Science. Deadline: February 14, 2025.",
        "Supports immigrant students. Deadline: October 18, 2024.",
    ],
}

# Convert data to a DataFrame
df = pd.DataFrame(data)
df["Date Due"] = pd.to_datetime(df["Date Due"])

# Streamlit app title
st.title("Scholarship Calendar")

# Sidebar for filtering scholarships by date
st.sidebar.header("Filter Scholarships")
min_date = st.sidebar.date_input("Start Date", value=datetime(2024, 1, 1))
max_date = st.sidebar.date_input("End Date", value=datetime(2025, 12, 31))

# Filter DataFrame based on selected date range
filtered_df = df[(df["Date Due"] >= pd.Timestamp(min_date)) & (df["Date Due"] <= pd.Timestamp(max_date))]

# Display the filtered scholarships in a calendar
st.subheader("Scholarship Calendar")
calendar = Calendar()

# Prepare calendar events
events = []
for _, row in filtered_df.iterrows():
    events.append({
        "date": row["Date Due"].strftime("%Y-%m-%d"),  # Convert date to string format
        "event": f"{row['Scholarship Name']}: {row['Summary']}",
    })

# Render the calendar
selected_date = calendar.render(events)

# Display additional details about selected scholarships
st.subheader("Selected Date Details")
if selected_date:
    selected_date = pd.Timestamp(selected_date).strftime("%Y-%m-%d")
    selected_scholarships = filtered_df[filtered_df["Date Due"] == selected_date]
    if not selected_scholarships.empty:
        st.write(selected_scholarships)
    else:
        st.write(f"No scholarships due on {selected_date}.")
else:
    st.write("Click on a date in the calendar to view details.")

# Display filtered scholarships in a table
st.subheader("Filtered Scholarships")
if not filtered_df.empty:
    st.write(filtered_df)
else:
    st.write("No scholarships available for the selected date range.")
